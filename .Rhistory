library(caTools)
library(ggplot2)
dataset$x <- c(1300,1600,1700,1900,2100,2200)
datasetx <- c(1300,1600,1700,1900,2100,2200)
x <- c(1300,1600,1700,1900,2100,2200)
y <- c(41000,50000,53000,59000,65000,68000)
x <- c(1300,1600,1700,1900,2100,2200)
y <- c(41000,50000,53000,59000,65000,68000)
dataset <- data.frame(c(x,y))
View(dataset)
dataset <- data.frame(x)
dataset$y <- y
ggplot() +
geom_point(aes(x = dataset$x , y = dataset$y) , colour = 'red')
dataset <- read.csv("efficiency_barchart.csv")
dataset <- read.csv("efficiency_barchart.csv" , header = TRUE)
dataset <- read.table("efficiency_barchart.csv")
dataset <- read.csv("efficiency_barchart.csv" , sep = "," , header = TRUE)
datamatrix <- matrix(c(3,5,16,1) , nrow = 1 , ncol = 5 , byrow = TRUE)
datamatrix <- matrix(c(3,5,16,1) , nrow = 1 , ncol = 4 , byrow = TRUE)
View(dataset)
View(dataset)
datamatrix <- matrix(c(3,5,16,1) , nrow = 1 , ncol = 4 , byrow = TRUE)
View(datamatrix)
View(datamatrix)
rownames(datamatrix) <- c("No of Papers")
colnames(datamatrix) <- c("<90%" , "90%-95%" , ">95%" , "Undefined")
View(datamatrix)
View(datamatrix)
barplot(datamatrix)
barplot(datamatrix , ylim = c(1,20))
barplot(datamatrix )
barplot(datamatrix ,  ylab = "No Of Papers")
barplot(datamatrix ,  ylab = "No Of Papers" , xlab = "Efficiency" , main = "Accuracy of techniques in various papers")
boxplot(datamatrix)
boxplot(datamatrix , use.cols = TRUE)
boxplot(datamatrix , use.cols = FALSE)
boxplot(datamatrix , use.cols = FALSE , ,  ylab = "No Of Papers" , xlab = "Efficiency" , main = "Accuracy of techniques in various papers")
boxplot(datamatrix , use.cols = FALSE ,   ylab = "No Of Papers" , main = "Accuracy of techniques in various papers")
datamatrix <- matrix(c(13,6,2,1,1) , nrow = 1 , ncol = 5 , byrow = TRUE)
rownames(datamatrix) <- c("No of Papers")
colnames(datamatrix) <- c("KDDCup1999 Dataset","NSLKDD Dataset","DARPA 98 Data set","Log Data set","Intel Lab data set")
View(datamatrix)
View(datamatrix)
datamatrix <- matrix(c(13,6,2,1,1) , nrow = 1 , ncol = 5 , byrow = TRUE)
rownames(datamatrix) <- c("No of Papers")
colnames(datamatrix) <- c("KDDCup1999 Dataset","NSLKDD Dataset","DARPA 98 Data set","Log Data set","Intel Lab data set")
barplot(datamatrix ,  ylab = "No Of Papers" , xlab = "Dataset" , main = "Data Set used in various Papers")
boxplot(datamatrix , use.cols = FALSE ,   ylab = "No Of Papers" , main = "Data Set used in various Papers")
datamatrix <- matrix(c(1,6,8,9,6) , nrow = 1 , ncol = 5 , byrow = TRUE)
rownames(datamatrix) <- c("Number of publications")
colnames(datamatrix) <- c("2005-07","2008-10","2011-13","2014-16","2017-18")
barplot(datamatrix ,  ylab = "Number of publications" , xlab = "year" , main = "Number of publications for a period of 3 consecutive years")
boxplot(datamatrix , use.cols = FALSE ,   ylab = "Number of publications" , main = "Number of publications for a period of 3 consecutive years")
datamatrix <- matrix(c(6,2,5,4,5,2,2) , nrow = 1 , ncol = 7 , byrow = TRUE)
rownames(datamatrix) <- c("No. of papers")
colnames(datamatrix) <- c("Data Mining","Self Organised Map","Clustering","Fuzzy","Supoort Vector Machine","Decision Tree","Outliers")
barplot(datamatrix ,  ylab = "No Of Papers" , xlab = "Techniques" , main = "Various techniques used in Papers")
boxplot(datamatrix , use.cols = FALSE ,   ylab = "No Of Papers" , main = "Various techniques used in Papers")
getwd()
installed.packages()
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
.libPaths()
remove.packages(pkgs, lib)
path.lib <- "path/to/R/lib"
pkgs.to.remove <- readLines(path.to.index.file)
pkgs.to.remove <- readLines(path.to.index.file)
sapply(pkgs.to.remove, uninstall.packages, lib=path.lib)
.libPaths()
ip <- as.data.frame(installed.packages())
ip <- subset(ip, !grepl("MRO", ip$LibPath))
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
path.lib <- unique(ip$LibPath)
pkgs.to.remove <- ip[,1]
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
library(caTools)
library(ggplot2)
install.packages("caTools")
install.packages("caret")
library(caret)
q()
install.packages("generator")
install.packages("generator")
install.packages("generator")
install.packages("generator")
q()
latitude_range <- runif(2000 , 28.000000 , 29.000000)
View(latitude_range)
longitude_range <- runif(2000 , 77.000000 , 78.000000)
dataset <- data.frame(latitude_range , longitude_range)
View(dataset)
View(dataset)
plot(dataset)
dev.off()
plot(dataset)
dev.off();
plot(dataset)
plot(dataset$latitude_range , dataset$longitude_range)
graphics.off()
plot(dataset)
dev.off();
latitude_range <- runif(2000 , 28.000000 , 29.000000)
longitude_range <- runif(2000 , 77.000000 , 78.000000)
dataset <- data.frame(latitude_range , longitude_range)
plot(x = latitude_range , y = longitude_range)
plot(x = latitude_range , y = longitude_range)
dev.off()
plot(x = latitude_range , y = longitude_range)
dev.off()
plot(x = latitude_range , y = longitude_range)
set.seed(10)
wcss <- vector()
for(i in 1:50)
wcss[i] <- sum(kmeans(dataset , i)$withinss)
plot(1:20 , wcss , type='b' , main= paste('Elbow trace') , xlab = 'No of cluster' , ylab = 'wcss')
plot(1:50 , wcss , type='b' , main= paste('Elbow trace') , xlab = 'No of cluster' , ylab = 'wcss')
setwd("~/Downloads/mch/")
dataset <- read.csv("Dataset_For_Hospitals.csv")
dataset <- dataset[ ,2:3]
set.seed(30)
kmeans <- kmeans(dataset , 9 , iter.max = 300 , nstart = 10 , algorithm = 'Lloyd')
dataset$cluster <- kmeans$cluster
dataset$cluster <- as.factor(dataset$cluster)
require(C50)
classifier <- C5.0(dataset[,1:2] , dataset[,3])
sethashtohospital <- function(hashcode)
{
dataset$hashcode_id <- hashcode
assign('dataset',dataset,envir=.GlobalEnv)
}
prediction <- function(latitude_range , longitude_range)
{
test_data <- data.frame(latitude_range , longitude_range)
predicted <- predict(classifier , test_data)
all_hosp <- subset(dataset , dataset$cluster == predicted)
all_hosp$distance <- (((all_hosp$latitude_range - latitude_range)^2) +((all_hosp$longitude_range - longitude_range)^2))
all_hosp <- (all_hosp[order(all_hosp$distance) , ])
return(all_hosp)
}
myFun <- function(n = 5000) {
a <- do.call(paste0, replicate(5, sample(LETTERS, n, TRUE), FALSE))
paste0(a, sprintf("%04d", sample(9999, n, TRUE)), sample(LETTERS, n, TRUE))
}
myFun(10)
abc <- myFun(270)
sethashtohospital(abc)
myenv <- new.env()
getSymbols()
library(quantmod)
install.packages("quantmod")
library(quantmod)
getSymbols(c("VZ","CHU","T","VOD","DTEGY") ,  env = myenv)
getSymbols(c("VZ","CHU","T","VOD","DTEGY") ,  env = myenv)
require(quantmod)
getSymbols(c("VZ","CHU","T","VOD","DTEGY") ,  env = myenv)
abc <- getSymbols(c("VZ","CHU","T","VOD","DTEGY") ,  env = myenv)
abc
q()
